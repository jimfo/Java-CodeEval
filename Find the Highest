// Title Find the Highest Score by CodeEval
// Author : James Fody
// Description : Each line includes a test case with a table. Table rows are separated by pipes '|'. 
// All table rows contain scores for each category, so all lines are of an equal length.
// Find the highest score in each category

package findhighestscore;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;

public class FindHighestScore 
{
    public static void main(String[] args) 
    {          
        try
        {
            File file = new File("/Users/jimfo1/Desktop/fizzbuzz3.txt");
            BufferedReader buffer = new BufferedReader(new FileReader(file));
            String line;
            String temp[];
            String temp2[];
            String high = "";
            int z = 0;
            int chk = 0, best = -1001;

            while ((line = buffer.readLine()) != null) 
            {
                line = line.trim();
                if (line.length() != 0)
                {
                    temp = line.split("\\|");
                    String temp3[][];
                    
                    z = temp[0].split(" ").length;
                    temp3 = new String[temp.length][z];
                    
                    for(int i = 0; i < temp.length; i++)
                    {
                        temp[i] = temp[i].trim();
                        temp2 = temp[i].split(" ");
                        
                        for(int j = 0; j < z; j++)
                        {
                            temp3[i][j] = temp2[j];
                        }
                    }
                    
                    for(int i = 0; i < z; i++)
                    {
                        for(int j = 0; j < temp.length; j++)
                        {
                            chk = Integer.parseInt(temp3[j][i]);
                            if(chk > best)
                            {
                                best = chk;
                            }
                        }
                        high += best + " ";
                        best = -1001;
                        
                    }                    
                        System.out.println(high);
                        high = "";     
                }
            }
        }
        catch (IOException e)
        {
            
        }
    }
    
}
