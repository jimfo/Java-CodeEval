// Title : Minimum Distance by CodeEval
// Author : James Fody
// Description : Find the minimum distance from a set of distances

package mindistance;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;

public class MinDistance 
{
    public static void main(String[] args) 
    {
        try
        {
            File file = new File("/Users/jimfo1/Desktop/fizzbuzz3.txt");
            BufferedReader buffer = new BufferedReader(new FileReader(file));
            
            String line;
         
            while ((line = buffer.readLine()) != null) 
            {
                line = line.trim();
                if (line.length() > 0)
                {
                    int small = 10000000;
                    int chk = 0;
                    String temp[];
                    temp = line.split(" ");
                    int arr[] = new int[temp.length-1];
                    
                    for(int i = 0; i < temp.length-1; i++)
                    {
                        arr[i] = Integer.parseInt(temp[i+1]);
                    }
                    
                    for(int i = 0; i < arr.length; i++)
                    {
                        for(int j = 0; j < arr.length; j++)
                        {                       
                            if(j != i)
                            {
                                chk += Math.abs(arr[i] - arr[j]);   
                            }
                        }
                            if (chk < small)
                            {
                                small = chk; 
                            }
                            chk = 0;                       
                    }
                    System.out.println(small);
                }
            }
        }
        catch (IOException e)
        {
            
        }
    }   
}
