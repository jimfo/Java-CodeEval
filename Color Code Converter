// TITLE : Color Code Converter from CODE EVAL
// AUTHOR : James Fody
// DESCRIPTION : Convert Hex, HSL, HSV, and CMYK values to RGB values
// I found these formulas on RapidTable.com and Had2Know.com
package colorcodeconverter;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;

public class ColorCodeConverter 
{
    public static void main(String[] args) 
    {
        try
        {
            File file = new File("/Users/jimfo1/Desktop/fizzbuzz3.txt");
            BufferedReader buffer = new BufferedReader(new FileReader(file));
            
            String line;
            String temp[];
            
            while ((line = buffer.readLine()) != null) 
            {
                line = line.trim();
                
                if(!line.isEmpty())
                {    
                    double r = 0, g = 0, b = 0;
                    
                    String str = line.substring(0,3);
                    
//--------------------------------------------------------------------------------------------------//  
                    // Convert HSL to RGB
                    
                    if(str.equals("HSL"))
                    {
                        
                        str = line.substring(4, line.length() - 1);
                        temp = str.split(",");
                        double h = 0, s = 0, l = 0, d = 0, x = 0, m = 0;
                        h = Integer.parseInt(temp[0]);
                        s = (Double.parseDouble(temp[1]) / 100);
                        l = (Double.parseDouble(temp[2]) / 100);

                        d = s*(1 - (Math.abs((2*l)-1)));
                        m = 255*(l - (.5 * d));
                        x = d*(1 - (Math.abs(((h/60)%2) - 1)));
                        
                        if(s == 0)
                        {
                            r = l;
                            g = l;
                            b = l;
                        }  
                        else
                        if(h >= 0 && h < 60)
                        {
                            r = (255 * d) + m;
                            g = (255 * x) + m;
                            b = m;
                        }
                        else
                        if (h >= 60 && h < 120)
                        {
                            r = (255 * x) + m;
                            g = (255 * d) + m;  
                            b = m;
                        }
                        else
                        if(h >= 120 && h < 180)
                        {
                            r = m;
                            g = (255 * d) + m;
                            b = (255 * x) + m;
                        }
                        else
                        if(h >= 180 && h < 240)
                        {
                            r = m;
                            g = (255 * x) + m;
                            b = (255 * d) + m;
                        }
                        else
                        if(h >= 240 && h < 300)
                        {
                            r = (255 * x) + m;
                            g = m;
                            b = (255 * d) + m;
                        }
                        else
                        if(h >= 300 && h < 360)   
                        {
                            r = (255 * d) + m;
                            g = m;
                            b = (255 * x) + m;
                        }

                    System.out.println("RGB(" + (int)r + "," + (int)g + "," + (int)b + ")");                   
                    }
                    
//--------------------------------------------------------------------------------------------------//    
                    // Convert HEX to RGB
                    else
                    if(str.substring(0,1).equals("#"))
                    {
                        line = line.replace("#", "");
                        
                        r = Integer.valueOf(line.substring(0,2),16);
                        g = Integer.valueOf(line.substring(2,4),16);
                        b = Integer.valueOf(line.substring(4,6),16);
                        System.out.println("RGB(" + (int)r + "," + (int)g + "," + (int)b + ")");                                
                    }
//--------------------------------------------------------------------------------------------------// 
                    // Convert HSV to RGB
                    else
                    if(str.equals("HSV"))
                    {
                        str = line.substring(4, line.length() - 1);
                        temp = str.split(",");
                        
                        double max = 0, min = 0, z = 0;
                        double h = 0, s = 0, v = 0;
                        h = Double.parseDouble(temp[0]);
                        s = (Double.parseDouble(temp[1]) / 100);
                        v = (Double.parseDouble(temp[2]) / 100);
                        
                        max = 255 * v;
                        min = max * (1 - s);
                        z   = (max - min) * (1 - Math.abs(((h / 60) % 2) - 1));

                        if(h >= 0 && h < 60)
                        {
                            r = max;
                            g = z + min;
                            b = min;
                        }
                        else
                        if(h >= 60 && h < 120)
                        {
                            r = z + min;
                            g = max;
                            b = min;
                        }
                        else
                        if(h >= 120 && h < 180)
                        {
                            r = min;
                            g = max;
                            b = z + min;
                        }
                        else
                        if ( h >= 180 && h < 240)
                        {
                            r = min;
                            g = z + min;
                            b = max;
                        }
                        else
                        if(h >= 240 && h < 300)    
                        {
                            r = z + min;
                            g = min;
                            b = max;
                        }    
                        else
                        if(h >= 300 && h < 360)
                        {
                            r = max;
                            g = min;
                            b = z + min;
                        }
                        
                    System.out.println("RGB(" + (int)Math.round(r) + "," + (int)Math.round(g) + "," + (int)Math.round(b) + ")");
                    }
//--------------------------------------------------------------------------------------------------// 
                    // Convert CMYK to RGB                    
                    else
                    {
                        str = line.substring(1,line.length() - 1);
                        double c = 0, m = 0, y = 0, k = 0;
                        temp = str.split(",");
                        
                        c = Double.parseDouble(temp[0]);
                        m = Double.parseDouble(temp[1]);
                        y = Double.parseDouble(temp[2]);
                        k = Double.parseDouble(temp[3]);
                        if (k == 255)
                        {
                            r = 255 - c;
                            g = 255 - m;
                            b = 255 - y;                            
                        }
                        else
                        {
                            r = 255 * ((1 - c) * (1 - k));
                            g = 255 * ((1 - m) * (1 - k));
                            b = 255 * ((1 - y) * (1 - k));
                        }

                        System.out.println("RGB(" + (int)Math.round(r) + "," + (int)Math.round(g) + "," + (int)Math.round(b) + ")");
                                
                    }
                }
            }
        }
        catch (IOException e)
        {
            
        }
    }
    
}
