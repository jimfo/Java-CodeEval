// Title : Knight Moves by CodeEval
// Author : James Fody
// Description : Find all possible positions for the next move of the knight on the empty chessboard.

package knightmoves;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.*;

public class KnightMoves 
{
    public static void main(String[] args) 
    {
        try
        {
            File file = new File("/Users/jimfo1/Desktop/fizzbuzz3.txt");
            BufferedReader buffer = new BufferedReader(new FileReader(file));
            
            String line;

            while ((line = buffer.readLine()) != null) 
            {
                line = line.trim();
                
                if(line.length() > 0)
                {
                    char horz[] = {'0','0','0','a','b','c','d','e','f','g','h','0','0','0'};
                    char vert[] = {'0','0','0','1','2','3','4','5','6','7','8','0','0','0'};
                    String hold = "";
                    char h = line.charAt(0);
                    char v = line.charAt(1);
                    int  hindex = 0;
                    int  vindex = 0;
                    List<String> list = new ArrayList();
                    
                    // Unrestricted
                    hindex = Arrays.binarySearch(horz, h);
                    vindex = Arrays.binarySearch(vert, v);

                        hold += horz[hindex+2];
                        hold += vert[vindex-1];
                        if(hold.charAt(0) != '0' && hold.charAt(1) != '0')
                            list.add(hold);
                        hold = "";

                        hold += horz[hindex+2];
                        hold += vert[vindex+1];
                        if(hold.charAt(0) != '0' && hold.charAt(1) != '0')
                            list.add(hold);
                        hold = "";

                        hold += horz[hindex-2];
                        hold += vert[vindex+1];
                        if(hold.charAt(0) != '0' && hold.charAt(1) != '0')
                            list.add(hold);
                        hold = "";

                        hold += horz[hindex-2];
                        hold += vert[vindex-1];
                        if(hold.charAt(0) != '0' && hold.charAt(1) != '0')
                            list.add(hold);
                        hold = "";
                        
                        hold += horz[hindex+1];
                        hold += vert[vindex-2];
                        if(hold.charAt(0) != '0' && hold.charAt(1) != '0')
                            list.add(hold);
                        hold = "";
                        
                        hold += horz[hindex+1];
                        hold += vert[vindex+2];
                        if(hold.charAt(0) != '0' && hold.charAt(1) != '0')
                            list.add(hold);
                        hold = "";
                        
                        hold += horz[hindex-1];
                        hold += vert[vindex-2];
                        if(hold.charAt(0) != '0' && hold.charAt(1) != '0')
                            list.add(hold);
                        hold = "";
                        
                        hold += horz[hindex-1];
                        hold += vert[vindex+2];
                        if(hold.charAt(0) != '0' && hold.charAt(1) != '0')
                            list.add(hold);
                        hold = "";
                      
                    Collections.sort(list);
                    
                    for(String s: list)
                    {
                        System.out.print(s + " ");
                    }
                    System.out.println();   
                }
            }
        }
        catch (IOException e)
        {
            
        }
    }   
}
