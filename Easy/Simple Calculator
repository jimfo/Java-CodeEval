// Title : Simple Calculator from CodeEval
// Author : James Fody
// Description : Solve a given equation. Equation may contain
//  1   ()       Brackets
//  2   -        Unary minus
//  3   ^        Exponent
//  4   *, /     Multiply, Divide (left-to-right precedence)
//  5   +, -     Add, Subtract (left-to-right precedence)

package simple.calculator;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.PriorityQueue;

public class SimpleCalculator 
{

    public static void main(String[] args) 
    {
        try
        {
            File file = new File("/Users/jimfo1/Desktop/fizzbuzz3.txt");
            BufferedReader buffer = new BufferedReader(new FileReader(file));
            
            String line;           
            String temp[];
            
            while ((line = buffer.readLine()) != null) 
            {
                // Create queue of digits
                String numberLine = line;
                numberLine = numberLine.trim();
                numberLine = numberLine.replaceAll("[^0-9?!\\.]"," ");
                numberLine = numberLine.trim().replaceAll(" +", " ");
                temp = numberLine.split(" ");
                PriorityQueue numbers = new PriorityQueue();
                
                for(String s: temp)
                {
                    double d = Double.parseDouble(s);
                    numbers.add(d);
                }
                
                // Create queue of operators
                line = line.trim();
                line = line.replaceAll("[0-9?!\\.]"," ");
                line = line.trim().replaceAll(" +", "");
                PriorityQueue operators = new PriorityQueue();
                
                for(int i = 0; i < line.length(); i++)
                {
                    char c = line.charAt(i);
                    operators.add(c);
                }
                
                double num1 = 0;
                double num2 = 0;
                while(operators.size() > 0 && numbers.size() > 0)
                {
                    
                }
                System.out.println(line + "   " + numberLine);
            }
        }
        catch (IOException e)
        {
            
        }
    }
    
}
