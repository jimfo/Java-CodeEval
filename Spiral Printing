// Title : Spiral Printing from CodeEval
// Author : James Fody
// Description: Given an NxM array print out contents clockwise from start
package spiral.printing;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.*;
public class SpiralPrinting 
{

    public static void main(String[] args) 
    {
        try
        {
            File file = new File("/Users/jimfo1/Desktop/fizzbuzz3.txt");
            BufferedReader buffer = new BufferedReader(new FileReader(file));
            
            String line;
            String temp[];
            List<String> list = new ArrayList();
            while ((line = buffer.readLine()) != null) 
            {
                // parse the numbers from the input
                line = line.trim();
                if(!line.isEmpty())
                {
                    line = line.replaceAll("[^0-9?!\\.]"," ");

                    // get the size of the array NxM
                    int x = line.indexOf(" ");
                    int n = Integer.parseInt(line.substring(0, x));   
                    
                    int y = line.indexOf(" ", x+1);
                    int m = Integer.parseInt(line.substring(x+1,y));
                    y = m;
                    x = n;
                    // Create the array                
                    String arr[][] = new String[n][m];
                    temp = line.trim().split(" ");
                    int s = 2;
                   
                    
                    if(m*n == temp.length-2)
                    {
                        for(int i = 0; i < n; i++)
                        {
                            for(int j = 0; j < m; j++)
                            {
                                arr[i][j] = temp[s];
                                s++;
                            }
                        }

                        // spiral print the array
                        int i,  k = 0, l = 0;
                        n--;  m--; 
                        
                        while(k <= n && l <= m)
                        {
                            // print from top left to right
                            for(i = l; i <= m; ++i) 
                            {
                                if (list.size() != x*y)
                                    list.add(arr[k][i]);
                            }           
                            k++;

                            // print from top right down
                            for(i = k; i <= n; ++i) 
                            {
                                if (list.size() != x*y)
                                    list.add(arr[i][m]);
                            }
                            m--;

                            // print from bottom right to left
                            
                            for(i = m; i >= l; --i) 
                            {
                                if (list.size() != x*y)
                                    list.add(arr[n][i]);
                            }
                            n--;

                            // print from bottom left up
                            for(i = n; i >= k; --i) 
                            {
                                if (list.size() != x*y)
                                    list.add(arr[i][l]);
                            }
                            l++;
                        }

                        for(int t = 0; t < list.size(); t++)
                        {
                            System.out.print(list.get(t));
                            if(t < list.size()-1)
                            {
                                System.out.print(" ");
                            }
                        } 
                    }
                    
                    System.out.println();
                    list.clear();
                }
            }
        }
        catch (IOException e)
        {
            
        }
    }
    
}
